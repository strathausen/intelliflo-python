# coding: utf-8

"""
    public-v2-prd-gb-01

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2016-08-19T00:00:00Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six
from swagger_client.models.base_portfolio_model_fund_ref import BasePortfolioModelFundRef  # noqa: F401,E501

class CreatePortfolioModelFundRef(BasePortfolioModelFundRef):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'currency_code': 'str',
        'code_type': 'str',
        'code': 'str'
    }
    if hasattr(BasePortfolioModelFundRef, "swagger_types"):
        swagger_types.update(BasePortfolioModelFundRef.swagger_types)

    attribute_map = {
        'currency_code': 'currencyCode',
        'code_type': 'codeType',
        'code': 'code'
    }
    if hasattr(BasePortfolioModelFundRef, "attribute_map"):
        attribute_map.update(BasePortfolioModelFundRef.attribute_map)

    def __init__(self, currency_code=None, code_type=None, code=None, *args, **kwargs):  # noqa: E501
        """CreatePortfolioModelFundRef - a model defined in Swagger"""  # noqa: E501
        self._currency_code = None
        self._code_type = None
        self._code = None
        self.discriminator = None
        if currency_code is not None:
            self.currency_code = currency_code
        if code_type is not None:
            self.code_type = code_type
        if code is not None:
            self.code = code
        BasePortfolioModelFundRef.__init__(self, *args, **kwargs)

    @property
    def currency_code(self):
        """Gets the currency_code of this CreatePortfolioModelFundRef.  # noqa: E501

        The fund currency code.  # noqa: E501

        :return: The currency_code of this CreatePortfolioModelFundRef.  # noqa: E501
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this CreatePortfolioModelFundRef.

        The fund currency code.  # noqa: E501

        :param currency_code: The currency_code of this CreatePortfolioModelFundRef.  # noqa: E501
        :type: str
        """

        self._currency_code = currency_code

    @property
    def code_type(self):
        """Gets the code_type of this CreatePortfolioModelFundRef.  # noqa: E501

        The type of the fund code.  # noqa: E501

        :return: The code_type of this CreatePortfolioModelFundRef.  # noqa: E501
        :rtype: str
        """
        return self._code_type

    @code_type.setter
    def code_type(self, code_type):
        """Sets the code_type of this CreatePortfolioModelFundRef.

        The type of the fund code.  # noqa: E501

        :param code_type: The code_type of this CreatePortfolioModelFundRef.  # noqa: E501
        :type: str
        """
        allowed_values = ["ISIN", "SEDOL", "CITI", "MEX", "EPIC", "PROVIDER"]  # noqa: E501
        if code_type not in allowed_values:
            raise ValueError(
                "Invalid value for `code_type` ({0}), must be one of {1}"  # noqa: E501
                .format(code_type, allowed_values)
            )

        self._code_type = code_type

    @property
    def code(self):
        """Gets the code of this CreatePortfolioModelFundRef.  # noqa: E501

        The fund code value.  # noqa: E501

        :return: The code of this CreatePortfolioModelFundRef.  # noqa: E501
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this CreatePortfolioModelFundRef.

        The fund code value.  # noqa: E501

        :param code: The code of this CreatePortfolioModelFundRef.  # noqa: E501
        :type: str
        """

        self._code = code

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreatePortfolioModelFundRef, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreatePortfolioModelFundRef):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
